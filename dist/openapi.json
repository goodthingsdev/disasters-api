{
  "openapi": "3.0.0",
  "info": {
    "title": "Disaster Data API",
    "version": "1.0.0",
    "description": "RESTful API for disaster data (wildfires, etc). Implemented in Node.js with Express and TypeScript."
  },
  "servers": [{ "url": "/api/v1" }],
  "paths": {
    "/disasters": {
      "get": {
        "summary": "Get all disasters (paginated)",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "minimum": 1 },
            "description": "Page number (default 1)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 100 },
            "description": "Results per page (default 20, max 100)"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": { "type": "string" },
            "description": "Disaster type (e.g., wildfire, flood)"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date" },
            "description": "Start date (inclusive, ISO 8601)"
          },
          {
            "name": "dateTo",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date" },
            "description": "End date (inclusive, ISO 8601)"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["active", "contained", "resolved"]
            },
            "description": "Filter disasters by status (active, contained, resolved)"
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of disasters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Disaster" }
                    },
                    "page": { "type": "integer" },
                    "limit": { "type": "integer" },
                    "total": { "type": "integer" },
                    "totalPages": { "type": "integer" }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new disaster",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DisasterInput" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Disaster created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Disaster" }
              }
            }
          },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/disasters/near": {
      "get": {
        "summary": "Get disasters near a location",
        "parameters": [
          {
            "name": "lat",
            "in": "query",
            "required": true,
            "schema": { "type": "number", "minimum": -90, "maximum": 90 }
          },
          {
            "name": "lng",
            "in": "query",
            "required": true,
            "schema": { "type": "number", "minimum": -180, "maximum": 180 }
          },
          {
            "name": "distance",
            "in": "query",
            "required": true,
            "schema": { "type": "number", "minimum": 0 }
          }
        ],
        "responses": {
          "200": {
            "description": "List of disasters within distance",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Disaster" } }
              }
            }
          },
          "400": { "description": "Invalid query parameters" }
        }
      }
    },
    "/disasters/{id}": {
      "get": {
        "summary": "Get a disaster by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "Disaster found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Disaster" }
              }
            }
          },
          "400": { "description": "Invalid ID format" },
          "404": { "description": "Not found" }
        }
      },
      "put": {
        "summary": "Update a disaster by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DisasterInput" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Disaster updated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Disaster" }
              }
            }
          },
          "400": { "description": "Invalid input or ID" },
          "404": { "description": "Not found" }
        }
      },
      "delete": {
        "summary": "Delete a disaster by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "204": { "description": "Disaster deleted" },
          "400": { "description": "Invalid ID format" },
          "404": { "description": "Not found" }
        }
      }
    },
    "/disasters/bulk": {
      "post": {
        "summary": "Bulk insert disasters",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/DisasterInput" },
                "minItems": 1
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Disasters created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Disaster" }
                    }
                  }
                }
              }
            }
          },
          "400": { "description": "Invalid input or bulk insert error" }
        }
      },
      "put": {
        "summary": "Bulk update disasters",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "allOf": [
                    { "$ref": "#/components/schemas/DisasterInput" },
                    { "required": ["_id"] }
                  ]
                },
                "minItems": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bulk update result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "matchedCount": { "type": "integer" },
                    "modifiedCount": { "type": "integer" }
                  }
                }
              }
            }
          },
          "400": { "description": "Invalid input or bulk update error" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Disaster": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "type": { "type": "string" },
          "location": {
            "type": "object",
            "description": "GeoJSON Point: { type: 'Point', coordinates: [lng, lat] }",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["Point"],
                "description": "Must be 'Point'"
              },
              "coordinates": {
                "type": "array",
                "description": "[longitude, latitude]",
                "minItems": 2,
                "maxItems": 2,
                "items": { "type": "number" }
              }
            },
            "required": ["type", "coordinates"]
          },
          "date": { "type": "string", "format": "date-time" },
          "description": { "type": "string" },
          "status": {
            "type": "string",
            "description": "Status of the disaster",
            "enum": ["active", "contained", "resolved"]
          }
        },
        "required": ["_id", "type", "location", "date", "status"]
      },
      "DisasterInput": {
        "type": "object",
        "properties": {
          "type": { "type": "string" },
          "location": {
            "type": "object",
            "description": "GeoJSON Point: { type: 'Point', coordinates: [lng, lat] }",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["Point"],
                "description": "Must be 'Point'"
              },
              "coordinates": {
                "type": "array",
                "description": "[longitude, latitude]",
                "minItems": 2,
                "maxItems": 2,
                "items": { "type": "number" }
              }
            },
            "required": ["type", "coordinates"]
          },
          "date": { "type": "string", "format": "date-time" },
          "description": { "type": "string" },
          "status": {
            "type": "string",
            "description": "Status of the disaster",
            "enum": ["active", "contained", "resolved"]
          }
        },
        "required": ["type", "location", "date", "status"]
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": { "type": "string" },
          "code": { "type": "string" },
          "details": { "type": "array", "items": { "type": "string" } },
          "requestId": { "type": "string" }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    }
  },
  "security": [{ "ApiKeyAuth": [] }]
}
